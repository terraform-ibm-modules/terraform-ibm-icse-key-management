{
  "path": ".",
  "variables": {
    "authorize_vpc_reader_role": {
      "name": "authorize_vpc_reader_role",
      "type": "bool",
      "description": "Create a service authorization to allow the key management service created by this module Reader role for IAM access to VPC block storage resources. This allows for block storage volumes for VPC to be encrypted using keys from the key management service",
      "default": true,
      "source": [
        "ibm_iam_authorization_policy.block_storage_policy.count",
        "ibm_iam_authorization_policy.server_protect_policy.count"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 50
      }
    },
    "keys": {
      "name": "keys",
      "type": "list(\n    object({\n      name            = string\n      root_key        = optional(bool)\n      payload         = optional(string)\n      key_ring        = optional(string) # Any key_ring added will be created\n      force_delete    = optional(bool)\n      endpoint        = optional(string) # can be public or private\n      iv_value        = optional(string) # (Optional, Forces new resource, String) Used with import tokens. The initialization vector (IV) that is generated when you encrypt a nonce. The IV value is required to decrypt the encrypted nonce value that you provide when you make a key import request to the service. To generate an IV, encrypt the nonce by running ibmcloud kp import-token encrypt-nonce. Only for imported root key.\n      encrypted_nonce = optional(string) # The encrypted nonce value that verifies your request to import a key to Key Protect. This value must be encrypted by using the key that you want to import to the service. To retrieve a nonce, use the ibmcloud kp import-token get command. Then, encrypt the value by running ibmcloud kp import-token encrypt-nonce. Only for imported root key.\n      policies = optional(\n        object({\n          rotation = optional(\n            object({\n              interval_month = number\n            })\n          )\n          dual_auth_delete = optional(\n            object({\n              enabled = bool\n            })\n          )\n        })\n      )\n    })\n  )",
      "description": "List of keys to be created for the service",
      "default": [
        {
          "key_ring": "at-test-slz-ring",
          "name": "at-test-slz-key",
          "root_key": true
        },
        {
          "key_ring": "at-test-slz-ring",
          "name": "at-test-atracker-key",
          "root_key": true
        },
        {
          "key_ring": "at-test-slz-ring",
          "name": "at-test-vsi-volume-key",
          "root_key": true
        }
      ],
      "source": [
        "ibm_kms_key_rings.rings.for_each",
        "module.key_map",
        "module.policies_map"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 68
      }
    },
    "name": {
      "name": "name",
      "type": "string",
      "description": "Name of the service to create or find from data. Created service instances will include the prefix.",
      "default": "kms",
      "required": true,
      "source": [
        "data.ibm_resource_instance.hpcs_instance.name",
        "data.ibm_resource_instance.kms.name"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 62
      }
    },
    "prefix": {
      "name": "prefix",
      "type": "string",
      "description": "The prefix that you would like to append to your resources",
      "required": true,
      "source": [
        "ibm_kms_key.key.key_name",
        "ibm_resource_instance.kms.name"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 10
      },
      "immutable": true
    },
    "region": {
      "name": "region",
      "type": "string",
      "description": "The region to which to deploy the VPC",
      "required": true,
      "source": [
        "ibm_resource_instance.kms.location"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 5
      },
      "cloud_data_type": "region",
      "immutable": true
    },
    "resource_group_id": {
      "name": "resource_group_id",
      "type": "string",
      "description": "Resource group ID to use for provision of resources or to find existing resources.",
      "source": [
        "data.ibm_resource_instance.hpcs_instance.resource_group_id",
        "data.ibm_resource_instance.kms.resource_group_id",
        "ibm_resource_instance.kms.resource_group_id"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 21
      },
      "cloud_data_type": "resource_group",
      "immutable": true,
      "computed": true,
      "cloud_data_range": [
        "resolved_to:id"
      ]
    },
    "service_endpoints": {
      "name": "service_endpoints",
      "type": "string",
      "description": "Service endpoints. Can be `public`, `private`, or `public-and-private`",
      "default": "private",
      "pos": {
        "filename": "variables.tf",
        "line": 27
      }
    },
    "tags": {
      "name": "tags",
      "type": "list(string)",
      "description": "List of Tags for the resource created",
      "source": [
        "ibm_resource_instance.kms.tags"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 15
      },
      "min_length": 1,
      "max_length": 128,
      "matches": "^[A-Za-z0-9:_ .-]+$",
      "computed": true,
      "elem": {
        "type": "TypeString"
      }
    },
    "use_data": {
      "name": "use_data",
      "type": "bool",
      "description": "Use existing Key Protect instance.",
      "default": false,
      "pos": {
        "filename": "variables.tf",
        "line": 44
      }
    },
    "use_hs_crypto": {
      "name": "use_hs_crypto",
      "type": "bool",
      "description": "Use HyperProtect Crypto Services. HPCS cannot be initialized in this module.",
      "default": false,
      "pos": {
        "filename": "variables.tf",
        "line": 38
      }
    }
  },
  "outputs": {
    "key_management_crn": {
      "name": "key_management_crn",
      "description": "CRN for KMS instance",
      "value": "local.key_management_crn",
      "pos": {
        "filename": "outputs.tf",
        "line": 10
      }
    },
    "key_management_guid": {
      "name": "key_management_guid",
      "description": "GUID for KMS instance",
      "value": "local.key_management_guid",
      "pos": {
        "filename": "outputs.tf",
        "line": 15
      }
    },
    "key_management_name": {
      "name": "key_management_name",
      "description": "Name of key management service",
      "value": "local.key_management_instance.name",
      "pos": {
        "filename": "outputs.tf",
        "line": 5
      }
    },
    "key_rings": {
      "name": "key_rings",
      "description": "Key rings created by module",
      "value": "ibm_kms_key_rings.rings",
      "pos": {
        "filename": "outputs.tf",
        "line": 30
      }
    },
    "keys": {
      "name": "keys",
      "description": "List of names and ids for keys created.",
      "pos": {
        "filename": "outputs.tf",
        "line": 41
      }
    }
  },
  "required_core": [
    "\u003e=1.0"
  ],
  "required_providers": {
    "ibm": {
      "source": "IBM-Cloud/ibm",
      "version_constraints": [
        "\u003e=1.48.0"
      ]
    }
  },
  "managed_resources": {
    "ibm_iam_authorization_policy.block_storage_policy": {
      "mode": "managed",
      "type": "ibm_iam_authorization_policy",
      "name": "block_storage_policy",
      "attributes": {
        "count": "authorize_vpc_reader_role"
      },
      "provider": {
        "name": "ibm"
      },
      "pos": {
        "filename": "service_authorizations.tf",
        "line": 15
      }
    },
    "ibm_iam_authorization_policy.server_protect_policy": {
      "mode": "managed",
      "type": "ibm_iam_authorization_policy",
      "name": "server_protect_policy",
      "attributes": {
        "count": "authorize_vpc_reader_role"
      },
      "provider": {
        "name": "ibm"
      },
      "pos": {
        "filename": "service_authorizations.tf",
        "line": 6
      }
    },
    "ibm_kms_key.key": {
      "mode": "managed",
      "type": "ibm_kms_key",
      "name": "key",
      "attributes": {
        "key_name": "prefix"
      },
      "provider": {
        "name": "ibm"
      },
      "pos": {
        "filename": "main.tf",
        "line": 94
      }
    },
    "ibm_kms_key_policies.key_policy": {
      "mode": "managed",
      "type": "ibm_kms_key_policies",
      "name": "key_policy",
      "provider": {
        "name": "ibm"
      },
      "pos": {
        "filename": "main.tf",
        "line": 130
      }
    },
    "ibm_kms_key_rings.rings": {
      "mode": "managed",
      "type": "ibm_kms_key_rings",
      "name": "rings",
      "attributes": {
        "for_each": "keys"
      },
      "provider": {
        "name": "ibm"
      },
      "pos": {
        "filename": "main.tf",
        "line": 66
      }
    },
    "ibm_resource_instance.kms": {
      "mode": "managed",
      "type": "ibm_resource_instance",
      "name": "kms",
      "attributes": {
        "location": "region",
        "name": "prefix",
        "resource_group_id": "resource_group_id",
        "tags": "tags"
      },
      "provider": {
        "name": "ibm"
      },
      "pos": {
        "filename": "main.tf",
        "line": 16
      }
    }
  },
  "data_resources": {
    "data.ibm_resource_instance.hpcs_instance": {
      "mode": "data",
      "type": "ibm_resource_instance",
      "name": "hpcs_instance",
      "attributes": {
        "name": "name",
        "resource_group_id": "resource_group_id"
      },
      "provider": {
        "name": "ibm"
      },
      "pos": {
        "filename": "main.tf",
        "line": 32
      }
    },
    "data.ibm_resource_instance.kms": {
      "mode": "data",
      "type": "ibm_resource_instance",
      "name": "kms",
      "attributes": {
        "name": "name",
        "resource_group_id": "resource_group_id"
      },
      "provider": {
        "name": "ibm"
      },
      "pos": {
        "filename": "main.tf",
        "line": 26
      }
    }
  },
  "module_calls": {
    "key_map": {
      "name": "key_map",
      "source": "./config_modules/list_to_map",
      "attributes": {
        "list": "keys"
      },
      "managed_resources": {},
      "data_resources": {},
      "outputs": {
        "configuration_failure": {
          "name": "configuration_failure",
          "description": "Forced output",
          "value": "local.configuration_failure_conflicting_values_lookup_value_regex_and_value_is_not_null",
          "pos": {
            "filename": "config_modules/list_to_map/outputs.tf",
            "line": 20
          }
        },
        "value": {
          "name": "value",
          "description": "List converted into map",
          "pos": {
            "filename": "config_modules/list_to_map/outputs.tf",
            "line": 5
          }
        }
      },
      "pos": {
        "filename": "main.tf",
        "line": 83
      }
    },
    "policies_map": {
      "name": "policies_map",
      "source": "./config_modules/list_to_map",
      "attributes": {
        "list": "keys"
      },
      "managed_resources": {},
      "data_resources": {},
      "outputs": {
        "configuration_failure": {
          "name": "configuration_failure",
          "description": "Forced output",
          "value": "local.configuration_failure_conflicting_values_lookup_value_regex_and_value_is_not_null",
          "pos": {
            "filename": "config_modules/list_to_map/outputs.tf",
            "line": 20
          }
        },
        "value": {
          "name": "value",
          "description": "List converted into map",
          "pos": {
            "filename": "config_modules/list_to_map/outputs.tf",
            "line": 5
          }
        }
      },
      "pos": {
        "filename": "main.tf",
        "line": 117
      }
    }
  }
}
